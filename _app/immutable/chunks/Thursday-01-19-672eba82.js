import{S as y,i as h,s as f,k as l,q as g,a as v,l as i,m as k,r as _,h as p,c as b,n as x,b as c,E as w,B as u}from"./index-b91c8866.js";function E(r){let n,e,o,a,d=`<code class="language-css"><span class="token selector">function nFormatter(num, digits)</span> <span class="token punctuation">&#123;</span>
  <span class="token selector">const lookup = [</span>
    <span class="token punctuation">&#123;</span> <span class="token property">value</span><span class="token punctuation">:</span> 1<span class="token punctuation">,</span> <span class="token property">symbol</span><span class="token punctuation">:</span> <span class="token string">""</span> <span class="token punctuation">&#125;</span><span class="token selector">,</span>
    <span class="token punctuation">&#123;</span> <span class="token property">value</span><span class="token punctuation">:</span> 1e3<span class="token punctuation">,</span> <span class="token property">symbol</span><span class="token punctuation">:</span> <span class="token string">"k"</span> <span class="token punctuation">&#125;</span><span class="token selector">,</span>
    <span class="token punctuation">&#123;</span> <span class="token property">value</span><span class="token punctuation">:</span> 1e6<span class="token punctuation">,</span> <span class="token property">symbol</span><span class="token punctuation">:</span> <span class="token string">"M"</span> <span class="token punctuation">&#125;</span><span class="token selector">,</span>
    <span class="token punctuation">&#123;</span> <span class="token property">value</span><span class="token punctuation">:</span> 1e9<span class="token punctuation">,</span> <span class="token property">symbol</span><span class="token punctuation">:</span> <span class="token string">"G"</span> <span class="token punctuation">&#125;</span><span class="token selector">,</span>
    <span class="token punctuation">&#123;</span> <span class="token property">value</span><span class="token punctuation">:</span> 1e12<span class="token punctuation">,</span> <span class="token property">symbol</span><span class="token punctuation">:</span> <span class="token string">"T"</span> <span class="token punctuation">&#125;</span><span class="token selector">,</span>
    <span class="token punctuation">&#123;</span> <span class="token property">value</span><span class="token punctuation">:</span> 1e15<span class="token punctuation">,</span> <span class="token property">symbol</span><span class="token punctuation">:</span> <span class="token string">"P"</span> <span class="token punctuation">&#125;</span><span class="token selector">,</span>
    <span class="token punctuation">&#123;</span> <span class="token property">value</span><span class="token punctuation">:</span> 1e18<span class="token punctuation">,</span> <span class="token property">symbol</span><span class="token punctuation">:</span> <span class="token string">"E"</span> <span class="token punctuation">&#125;</span>
  ]<span class="token punctuation">;</span>
  const rx = /.0+$|<span class="token punctuation">(</span>.[0-9]*[1-9]<span class="token punctuation">)</span>0+$/<span class="token punctuation">;</span>
  <span class="token selector">var item = lookup.slice().reverse().find(function(item)</span> <span class="token punctuation">&#123;</span>
    return num >= item.value<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  return item ? <span class="token punctuation">(</span>num / item.value<span class="token punctuation">)</span>.<span class="token function">toFixed</span><span class="token punctuation">(</span>digits<span class="token punctuation">)</span>.<span class="token function">replace</span><span class="token punctuation">(</span>rx<span class="token punctuation">,</span> <span class="token string">"$1"</span><span class="token punctuation">)</span> + item.<span class="token property">symbol</span> <span class="token punctuation">:</span> <span class="token string">"0"</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`;return{c(){n=l("p"),e=g("today i changed some stuff, i added some music that you can play if you want to, i also added a button that you can click to stop the music. I have added some minors such as text changes where i just changed the name of the workers. I also added some code"),o=v(),a=l("pre"),this.h()},l(s){n=i(s,"P",{});var t=k(n);e=_(t,"today i changed some stuff, i added some music that you can play if you want to, i also added a button that you can click to stop the music. I have added some minors such as text changes where i just changed the name of the workers. I also added some code"),t.forEach(p),o=b(s),a=i(s,"PRE",{class:!0});var m=k(a);m.forEach(p),this.h()},h(){x(a,"class","language-css")},m(s,t){c(s,n,t),w(n,e),c(s,o,t),c(s,a,t),a.innerHTML=d},p:u,i:u,o:u,d(s){s&&p(n),s&&p(o),s&&p(a)}}}const T={title:"Thursday morning",date:"2023-01-19"};class P extends y{constructor(n){super(),h(this,n,null,E,f,{})}}export{P as default,T as metadata};
